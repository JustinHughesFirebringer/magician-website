version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ../output:/var/www/magician-website:ro
      - ./logs:/var/log/nginx
    depends_on:
      - api
    networks:
      - magician-network
    restart: unless-stopped

  api:
    build:
      context: ..
      dockerfile: deployment/Dockerfile
    environment:
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=production
    volumes:
      - ../data:/app/data
      - ./logs:/app/logs
    networks:
      - magician-network
    restart: unless-stopped

  monitoring:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=your_secure_password
    networks:
      - magician-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - magician-network
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - magician-network
    restart: unless-stopped

  cdn:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ../static:/usr/share/nginx/html:ro
    networks:
      - magician-network
    restart: unless-stopped

networks:
  magician-network:
    driver: bridge

volumes:
  prometheus_data:
  redis_data:
